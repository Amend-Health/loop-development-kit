import * as fs from 'fs';
import * as path from 'path';

const srcDir = path.join(__dirname, '../src/grpc');
const destDir = path.join(__dirname, '../dist/grpc');

/*
 This script copies the generated GRPC declaration files over the recompiled ones generated by Typescript.

 When attempting to compile examples from relative installs we were finding that compilation errors were being
 generated. Research determined that these compilation errors were being produced because the Typescript compilation
 process was recompiling the GRPC definition files, and introducing some errors in the process. The message files
 (e.g. whisper_pb.d.ts) would be empty, and the service definitions was exposing the UI client as a variable not type.

 This issue didn't seem to be consistent in that it would generate similar errors for all the client classes, so
 there is some component of the compilation process that seems to be inconsistent.
*/

fs.readdirSync(srcDir, { withFileTypes: true })
  .filter((dirEnt: fs.Dirent) => dirEnt.isFile() && dirEnt.name.endsWith('_pb.d.ts'))
  .forEach((dirEntry) => {
    // Generate target filename.
    const srcFilePath = path.join(srcDir, dirEntry.name);
    const targetFilePath = path.join(destDir, dirEntry.name);
    fs.copyFileSync(srcFilePath, targetFilePath, fs.constants.COPYFILE_FICLONE);
  });
